// Generated by view binder compiler. Do not edit!
package com.bdtask.restoraposroomdbtab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bdtask.restoraposroomdbtab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VhCartItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView deleteBtnC;

  @NonNull
  public final TextView foodItem;

  @NonNull
  public final TextView foodQuantity;

  @NonNull
  public final TextView foodVariant;

  @NonNull
  public final ImageView minusBtnC;

  @NonNull
  public final TextView noteTv;

  @NonNull
  public final ImageView plusBtnC;

  @NonNull
  public final TextView totalUnitPrice;

  private VhCartItemBinding(@NonNull CardView rootView, @NonNull ImageView deleteBtnC,
      @NonNull TextView foodItem, @NonNull TextView foodQuantity, @NonNull TextView foodVariant,
      @NonNull ImageView minusBtnC, @NonNull TextView noteTv, @NonNull ImageView plusBtnC,
      @NonNull TextView totalUnitPrice) {
    this.rootView = rootView;
    this.deleteBtnC = deleteBtnC;
    this.foodItem = foodItem;
    this.foodQuantity = foodQuantity;
    this.foodVariant = foodVariant;
    this.minusBtnC = minusBtnC;
    this.noteTv = noteTv;
    this.plusBtnC = plusBtnC;
    this.totalUnitPrice = totalUnitPrice;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static VhCartItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VhCartItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.vh_cart_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VhCartItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteBtnC;
      ImageView deleteBtnC = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtnC == null) {
        break missingId;
      }

      id = R.id.foodItem;
      TextView foodItem = ViewBindings.findChildViewById(rootView, id);
      if (foodItem == null) {
        break missingId;
      }

      id = R.id.foodQuantity;
      TextView foodQuantity = ViewBindings.findChildViewById(rootView, id);
      if (foodQuantity == null) {
        break missingId;
      }

      id = R.id.foodVariant;
      TextView foodVariant = ViewBindings.findChildViewById(rootView, id);
      if (foodVariant == null) {
        break missingId;
      }

      id = R.id.minusBtnC;
      ImageView minusBtnC = ViewBindings.findChildViewById(rootView, id);
      if (minusBtnC == null) {
        break missingId;
      }

      id = R.id.noteTv;
      TextView noteTv = ViewBindings.findChildViewById(rootView, id);
      if (noteTv == null) {
        break missingId;
      }

      id = R.id.plusBtnC;
      ImageView plusBtnC = ViewBindings.findChildViewById(rootView, id);
      if (plusBtnC == null) {
        break missingId;
      }

      id = R.id.totalUnitPrice;
      TextView totalUnitPrice = ViewBindings.findChildViewById(rootView, id);
      if (totalUnitPrice == null) {
        break missingId;
      }

      return new VhCartItemBinding((CardView) rootView, deleteBtnC, foodItem, foodQuantity,
          foodVariant, minusBtnC, noteTv, plusBtnC, totalUnitPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
