// Generated by view binder compiler. Do not edit!
package com.bdtask.restoraposroomdbtab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bdtask.restoraposroomdbtab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSplitOrderBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final RelativeLayout appbar;

  @NonNull
  public final ImageView spClose;

  @NonNull
  public final CardView spItemPlus;

  @NonNull
  public final RecyclerView spSplitterRv;

  @NonNull
  public final Spinner splitItemSpnr;

  private DialogSplitOrderBinding(@NonNull CardView rootView, @NonNull RelativeLayout appbar,
      @NonNull ImageView spClose, @NonNull CardView spItemPlus, @NonNull RecyclerView spSplitterRv,
      @NonNull Spinner splitItemSpnr) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.spClose = spClose;
    this.spItemPlus = spItemPlus;
    this.spSplitterRv = spSplitterRv;
    this.splitItemSpnr = splitItemSpnr;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSplitOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSplitOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_split_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSplitOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      RelativeLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.spClose;
      ImageView spClose = ViewBindings.findChildViewById(rootView, id);
      if (spClose == null) {
        break missingId;
      }

      id = R.id.spItemPlus;
      CardView spItemPlus = ViewBindings.findChildViewById(rootView, id);
      if (spItemPlus == null) {
        break missingId;
      }

      id = R.id.spSplitterRv;
      RecyclerView spSplitterRv = ViewBindings.findChildViewById(rootView, id);
      if (spSplitterRv == null) {
        break missingId;
      }

      id = R.id.splitItemSpnr;
      Spinner splitItemSpnr = ViewBindings.findChildViewById(rootView, id);
      if (splitItemSpnr == null) {
        break missingId;
      }

      return new DialogSplitOrderBinding((CardView) rootView, appbar, spClose, spItemPlus,
          spSplitterRv, splitItemSpnr);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
