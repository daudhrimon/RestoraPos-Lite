// Generated by view binder compiler. Do not edit!
package com.bdtask.restoraposroomdbtab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bdtask.restoraposroomdbtab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VhOngoingBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView cusName;

  @NonNull
  public final TextView orderId;

  @NonNull
  public final ImageView table;

  @NonNull
  public final TextView tableName;

  @NonNull
  public final TextView waiterName;

  private VhOngoingBinding(@NonNull CardView rootView, @NonNull TextView cusName,
      @NonNull TextView orderId, @NonNull ImageView table, @NonNull TextView tableName,
      @NonNull TextView waiterName) {
    this.rootView = rootView;
    this.cusName = cusName;
    this.orderId = orderId;
    this.table = table;
    this.tableName = tableName;
    this.waiterName = waiterName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static VhOngoingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VhOngoingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.vh_ongoing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VhOngoingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cusName;
      TextView cusName = ViewBindings.findChildViewById(rootView, id);
      if (cusName == null) {
        break missingId;
      }

      id = R.id.orderId;
      TextView orderId = ViewBindings.findChildViewById(rootView, id);
      if (orderId == null) {
        break missingId;
      }

      id = R.id.table;
      ImageView table = ViewBindings.findChildViewById(rootView, id);
      if (table == null) {
        break missingId;
      }

      id = R.id.tableName;
      TextView tableName = ViewBindings.findChildViewById(rootView, id);
      if (tableName == null) {
        break missingId;
      }

      id = R.id.waiterName;
      TextView waiterName = ViewBindings.findChildViewById(rootView, id);
      if (waiterName == null) {
        break missingId;
      }

      return new VhOngoingBinding((CardView) rootView, cusName, orderId, table, tableName,
          waiterName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
