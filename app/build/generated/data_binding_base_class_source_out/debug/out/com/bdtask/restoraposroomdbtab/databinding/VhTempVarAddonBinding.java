// Generated by view binder compiler. Do not edit!
package com.bdtask.restoraposroomdbtab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bdtask.restoraposroomdbtab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VhTempVarAddonBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView itemDltBtn;

  @NonNull
  public final ImageView itemEditBtn;

  @NonNull
  public final TextView itemNameTv;

  @NonNull
  public final TextView itemPriceTv;

  @NonNull
  public final LinearLayout updelLay;

  private VhTempVarAddonBinding(@NonNull RelativeLayout rootView, @NonNull ImageView itemDltBtn,
      @NonNull ImageView itemEditBtn, @NonNull TextView itemNameTv, @NonNull TextView itemPriceTv,
      @NonNull LinearLayout updelLay) {
    this.rootView = rootView;
    this.itemDltBtn = itemDltBtn;
    this.itemEditBtn = itemEditBtn;
    this.itemNameTv = itemNameTv;
    this.itemPriceTv = itemPriceTv;
    this.updelLay = updelLay;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VhTempVarAddonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VhTempVarAddonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.vh_temp_var_addon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VhTempVarAddonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.itemDltBtn;
      ImageView itemDltBtn = ViewBindings.findChildViewById(rootView, id);
      if (itemDltBtn == null) {
        break missingId;
      }

      id = R.id.itemEditBtn;
      ImageView itemEditBtn = ViewBindings.findChildViewById(rootView, id);
      if (itemEditBtn == null) {
        break missingId;
      }

      id = R.id.itemNameTv;
      TextView itemNameTv = ViewBindings.findChildViewById(rootView, id);
      if (itemNameTv == null) {
        break missingId;
      }

      id = R.id.itemPriceTv;
      TextView itemPriceTv = ViewBindings.findChildViewById(rootView, id);
      if (itemPriceTv == null) {
        break missingId;
      }

      id = R.id.updelLay;
      LinearLayout updelLay = ViewBindings.findChildViewById(rootView, id);
      if (updelLay == null) {
        break missingId;
      }

      return new VhTempVarAddonBinding((RelativeLayout) rootView, itemDltBtn, itemEditBtn,
          itemNameTv, itemPriceTv, updelLay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
