// Generated by view binder compiler. Do not edit!
package com.bdtask.restoraposroomdbtab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.airbnb.lottie.LottieAnimationView;
import com.bdtask.restoraposroomdbtab.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomLay;

  @NonNull
  public final RelativeLayout calculatorLay;

  @NonNull
  public final CardView cancelBtn;

  @NonNull
  public final RecyclerView cartRecycler;

  @NonNull
  public final LinearLayout cartRecyclerLay;

  @NonNull
  public final TextView closeTv;

  @NonNull
  public final RelativeLayout deleteBtn;

  @NonNull
  public final LottieAnimationView focusLottie;

  @NonNull
  public final CardView grandTotalCV;

  @NonNull
  public final TextView grandTotalTv;

  @NonNull
  public final RelativeLayout menuBtn;

  @NonNull
  public final TextView ongoingTv;

  @NonNull
  public final RelativeLayout orderCustomize;

  @NonNull
  public final RelativeLayout placeOrder;

  @NonNull
  public final CardView placeOrderCardView;

  @NonNull
  public final RelativeLayout quickOrder;

  @NonNull
  public final CardView quickOrderCardView;

  @NonNull
  public final EditText searchEt;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView todayTv;

  @NonNull
  public final ViewPager2 viewPager2;

  private FragmentMainBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout bottomLay,
      @NonNull RelativeLayout calculatorLay, @NonNull CardView cancelBtn,
      @NonNull RecyclerView cartRecycler, @NonNull LinearLayout cartRecyclerLay,
      @NonNull TextView closeTv, @NonNull RelativeLayout deleteBtn,
      @NonNull LottieAnimationView focusLottie, @NonNull CardView grandTotalCV,
      @NonNull TextView grandTotalTv, @NonNull RelativeLayout menuBtn, @NonNull TextView ongoingTv,
      @NonNull RelativeLayout orderCustomize, @NonNull RelativeLayout placeOrder,
      @NonNull CardView placeOrderCardView, @NonNull RelativeLayout quickOrder,
      @NonNull CardView quickOrderCardView, @NonNull EditText searchEt,
      @NonNull TabLayout tabLayout, @NonNull TextView todayTv, @NonNull ViewPager2 viewPager2) {
    this.rootView = rootView;
    this.bottomLay = bottomLay;
    this.calculatorLay = calculatorLay;
    this.cancelBtn = cancelBtn;
    this.cartRecycler = cartRecycler;
    this.cartRecyclerLay = cartRecyclerLay;
    this.closeTv = closeTv;
    this.deleteBtn = deleteBtn;
    this.focusLottie = focusLottie;
    this.grandTotalCV = grandTotalCV;
    this.grandTotalTv = grandTotalTv;
    this.menuBtn = menuBtn;
    this.ongoingTv = ongoingTv;
    this.orderCustomize = orderCustomize;
    this.placeOrder = placeOrder;
    this.placeOrderCardView = placeOrderCardView;
    this.quickOrder = quickOrder;
    this.quickOrderCardView = quickOrderCardView;
    this.searchEt = searchEt;
    this.tabLayout = tabLayout;
    this.todayTv = todayTv;
    this.viewPager2 = viewPager2;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomLay;
      LinearLayout bottomLay = ViewBindings.findChildViewById(rootView, id);
      if (bottomLay == null) {
        break missingId;
      }

      id = R.id.calculatorLay;
      RelativeLayout calculatorLay = ViewBindings.findChildViewById(rootView, id);
      if (calculatorLay == null) {
        break missingId;
      }

      id = R.id.cancelBtn;
      CardView cancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelBtn == null) {
        break missingId;
      }

      id = R.id.cartRecycler;
      RecyclerView cartRecycler = ViewBindings.findChildViewById(rootView, id);
      if (cartRecycler == null) {
        break missingId;
      }

      id = R.id.cartRecyclerLay;
      LinearLayout cartRecyclerLay = ViewBindings.findChildViewById(rootView, id);
      if (cartRecyclerLay == null) {
        break missingId;
      }

      id = R.id.closeTv;
      TextView closeTv = ViewBindings.findChildViewById(rootView, id);
      if (closeTv == null) {
        break missingId;
      }

      id = R.id.deleteBtn;
      RelativeLayout deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.focusLottie;
      LottieAnimationView focusLottie = ViewBindings.findChildViewById(rootView, id);
      if (focusLottie == null) {
        break missingId;
      }

      id = R.id.grandTotalCV;
      CardView grandTotalCV = ViewBindings.findChildViewById(rootView, id);
      if (grandTotalCV == null) {
        break missingId;
      }

      id = R.id.grandTotalTv;
      TextView grandTotalTv = ViewBindings.findChildViewById(rootView, id);
      if (grandTotalTv == null) {
        break missingId;
      }

      id = R.id.menuBtn;
      RelativeLayout menuBtn = ViewBindings.findChildViewById(rootView, id);
      if (menuBtn == null) {
        break missingId;
      }

      id = R.id.ongoingTv;
      TextView ongoingTv = ViewBindings.findChildViewById(rootView, id);
      if (ongoingTv == null) {
        break missingId;
      }

      id = R.id.orderCustomize;
      RelativeLayout orderCustomize = ViewBindings.findChildViewById(rootView, id);
      if (orderCustomize == null) {
        break missingId;
      }

      id = R.id.placeOrder;
      RelativeLayout placeOrder = ViewBindings.findChildViewById(rootView, id);
      if (placeOrder == null) {
        break missingId;
      }

      id = R.id.placeOrderCardView;
      CardView placeOrderCardView = ViewBindings.findChildViewById(rootView, id);
      if (placeOrderCardView == null) {
        break missingId;
      }

      id = R.id.quickOrder;
      RelativeLayout quickOrder = ViewBindings.findChildViewById(rootView, id);
      if (quickOrder == null) {
        break missingId;
      }

      id = R.id.quickOrderCardView;
      CardView quickOrderCardView = ViewBindings.findChildViewById(rootView, id);
      if (quickOrderCardView == null) {
        break missingId;
      }

      id = R.id.searchEt;
      EditText searchEt = ViewBindings.findChildViewById(rootView, id);
      if (searchEt == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.todayTv;
      TextView todayTv = ViewBindings.findChildViewById(rootView, id);
      if (todayTv == null) {
        break missingId;
      }

      id = R.id.viewPager2;
      ViewPager2 viewPager2 = ViewBindings.findChildViewById(rootView, id);
      if (viewPager2 == null) {
        break missingId;
      }

      return new FragmentMainBinding((RelativeLayout) rootView, bottomLay, calculatorLay, cancelBtn,
          cartRecycler, cartRecyclerLay, closeTv, deleteBtn, focusLottie, grandTotalCV,
          grandTotalTv, menuBtn, ongoingTv, orderCustomize, placeOrder, placeOrderCardView,
          quickOrder, quickOrderCardView, searchEt, tabLayout, todayTv, viewPager2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
