// Generated by view binder compiler. Do not edit!
package com.bdtask.restoraposroomdbtab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bdtask.restoraposroomdbtab.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFoodBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FloatingActionButton addAddonsBtn;

  @NonNull
  public final TextView addFoodBtn;

  @NonNull
  public final ImageView addImageBtn;

  @NonNull
  public final TextView addonsHeader;

  @NonNull
  public final RecyclerView addonsRecycler;

  @NonNull
  public final ImageView cateAddBtn;

  @NonNull
  public final TextView cateHeader;

  @NonNull
  public final Spinner categorySpinner;

  @NonNull
  public final ImageView foodBack;

  @NonNull
  public final TextView foodHeader;

  @NonNull
  public final EditText foodTitleEt;

  @NonNull
  public final LinearLayout secondView;

  @NonNull
  public final RelativeLayout toolBar;

  @NonNull
  public final TextView variantHeader;

  @NonNull
  public final FloatingActionButton variantPlusBtn;

  @NonNull
  public final RecyclerView variantRecycler;

  private FragmentFoodBinding(@NonNull LinearLayout rootView,
      @NonNull FloatingActionButton addAddonsBtn, @NonNull TextView addFoodBtn,
      @NonNull ImageView addImageBtn, @NonNull TextView addonsHeader,
      @NonNull RecyclerView addonsRecycler, @NonNull ImageView cateAddBtn,
      @NonNull TextView cateHeader, @NonNull Spinner categorySpinner, @NonNull ImageView foodBack,
      @NonNull TextView foodHeader, @NonNull EditText foodTitleEt, @NonNull LinearLayout secondView,
      @NonNull RelativeLayout toolBar, @NonNull TextView variantHeader,
      @NonNull FloatingActionButton variantPlusBtn, @NonNull RecyclerView variantRecycler) {
    this.rootView = rootView;
    this.addAddonsBtn = addAddonsBtn;
    this.addFoodBtn = addFoodBtn;
    this.addImageBtn = addImageBtn;
    this.addonsHeader = addonsHeader;
    this.addonsRecycler = addonsRecycler;
    this.cateAddBtn = cateAddBtn;
    this.cateHeader = cateHeader;
    this.categorySpinner = categorySpinner;
    this.foodBack = foodBack;
    this.foodHeader = foodHeader;
    this.foodTitleEt = foodTitleEt;
    this.secondView = secondView;
    this.toolBar = toolBar;
    this.variantHeader = variantHeader;
    this.variantPlusBtn = variantPlusBtn;
    this.variantRecycler = variantRecycler;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addAddonsBtn;
      FloatingActionButton addAddonsBtn = ViewBindings.findChildViewById(rootView, id);
      if (addAddonsBtn == null) {
        break missingId;
      }

      id = R.id.addFoodBtn;
      TextView addFoodBtn = ViewBindings.findChildViewById(rootView, id);
      if (addFoodBtn == null) {
        break missingId;
      }

      id = R.id.addImageBtn;
      ImageView addImageBtn = ViewBindings.findChildViewById(rootView, id);
      if (addImageBtn == null) {
        break missingId;
      }

      id = R.id.addonsHeader;
      TextView addonsHeader = ViewBindings.findChildViewById(rootView, id);
      if (addonsHeader == null) {
        break missingId;
      }

      id = R.id.addonsRecycler;
      RecyclerView addonsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (addonsRecycler == null) {
        break missingId;
      }

      id = R.id.cateAddBtn;
      ImageView cateAddBtn = ViewBindings.findChildViewById(rootView, id);
      if (cateAddBtn == null) {
        break missingId;
      }

      id = R.id.cateHeader;
      TextView cateHeader = ViewBindings.findChildViewById(rootView, id);
      if (cateHeader == null) {
        break missingId;
      }

      id = R.id.category_spinner;
      Spinner categorySpinner = ViewBindings.findChildViewById(rootView, id);
      if (categorySpinner == null) {
        break missingId;
      }

      id = R.id.foodBack;
      ImageView foodBack = ViewBindings.findChildViewById(rootView, id);
      if (foodBack == null) {
        break missingId;
      }

      id = R.id.foodHeader;
      TextView foodHeader = ViewBindings.findChildViewById(rootView, id);
      if (foodHeader == null) {
        break missingId;
      }

      id = R.id.foodTitleEt;
      EditText foodTitleEt = ViewBindings.findChildViewById(rootView, id);
      if (foodTitleEt == null) {
        break missingId;
      }

      id = R.id.secondView;
      LinearLayout secondView = ViewBindings.findChildViewById(rootView, id);
      if (secondView == null) {
        break missingId;
      }

      id = R.id.toolBar;
      RelativeLayout toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.variantHeader;
      TextView variantHeader = ViewBindings.findChildViewById(rootView, id);
      if (variantHeader == null) {
        break missingId;
      }

      id = R.id.variantPlusBtn;
      FloatingActionButton variantPlusBtn = ViewBindings.findChildViewById(rootView, id);
      if (variantPlusBtn == null) {
        break missingId;
      }

      id = R.id.variantRecycler;
      RecyclerView variantRecycler = ViewBindings.findChildViewById(rootView, id);
      if (variantRecycler == null) {
        break missingId;
      }

      return new FragmentFoodBinding((LinearLayout) rootView, addAddonsBtn, addFoodBtn, addImageBtn,
          addonsHeader, addonsRecycler, cateAddBtn, cateHeader, categorySpinner, foodBack,
          foodHeader, foodTitleEt, secondView, toolBar, variantHeader, variantPlusBtn,
          variantRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
