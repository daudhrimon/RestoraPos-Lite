// Generated by view binder compiler. Do not edit!
package com.bdtask.restoraposroomdbtab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bdtask.restoraposroomdbtab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogCalculatorBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView bracketsOnClick;

  @NonNull
  public final TextView clearOnClick;

  @NonNull
  public final ImageView closeBtn;

  @NonNull
  public final TextView decimalOnClick;

  @NonNull
  public final TextView divisionOnClick;

  @NonNull
  public final TextView eightOnClick;

  @NonNull
  public final TextView equalsOnClick;

  @NonNull
  public final TextView fiveOnClick;

  @NonNull
  public final TextView fourOnClick;

  @NonNull
  public final TextView minusOnClick;

  @NonNull
  public final TextView nineOnClick;

  @NonNull
  public final TextView oneOnClick;

  @NonNull
  public final TextView plusOnClick;

  @NonNull
  public final TextView powerOfOnClick;

  @NonNull
  public final TextView resultTextView;

  @NonNull
  public final TextView sevenOnClick;

  @NonNull
  public final TextView sixOnClick;

  @NonNull
  public final TextView threeOnClick;

  @NonNull
  public final TextView timesOnClick;

  @NonNull
  public final TextView twoOnClick;

  @NonNull
  public final TextView workingsTextView;

  @NonNull
  public final TextView zeroOnClick;

  private DialogCalculatorBinding(@NonNull CardView rootView, @NonNull TextView bracketsOnClick,
      @NonNull TextView clearOnClick, @NonNull ImageView closeBtn, @NonNull TextView decimalOnClick,
      @NonNull TextView divisionOnClick, @NonNull TextView eightOnClick,
      @NonNull TextView equalsOnClick, @NonNull TextView fiveOnClick, @NonNull TextView fourOnClick,
      @NonNull TextView minusOnClick, @NonNull TextView nineOnClick, @NonNull TextView oneOnClick,
      @NonNull TextView plusOnClick, @NonNull TextView powerOfOnClick,
      @NonNull TextView resultTextView, @NonNull TextView sevenOnClick,
      @NonNull TextView sixOnClick, @NonNull TextView threeOnClick, @NonNull TextView timesOnClick,
      @NonNull TextView twoOnClick, @NonNull TextView workingsTextView,
      @NonNull TextView zeroOnClick) {
    this.rootView = rootView;
    this.bracketsOnClick = bracketsOnClick;
    this.clearOnClick = clearOnClick;
    this.closeBtn = closeBtn;
    this.decimalOnClick = decimalOnClick;
    this.divisionOnClick = divisionOnClick;
    this.eightOnClick = eightOnClick;
    this.equalsOnClick = equalsOnClick;
    this.fiveOnClick = fiveOnClick;
    this.fourOnClick = fourOnClick;
    this.minusOnClick = minusOnClick;
    this.nineOnClick = nineOnClick;
    this.oneOnClick = oneOnClick;
    this.plusOnClick = plusOnClick;
    this.powerOfOnClick = powerOfOnClick;
    this.resultTextView = resultTextView;
    this.sevenOnClick = sevenOnClick;
    this.sixOnClick = sixOnClick;
    this.threeOnClick = threeOnClick;
    this.timesOnClick = timesOnClick;
    this.twoOnClick = twoOnClick;
    this.workingsTextView = workingsTextView;
    this.zeroOnClick = zeroOnClick;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogCalculatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogCalculatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_calculator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogCalculatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bracketsOnClick;
      TextView bracketsOnClick = ViewBindings.findChildViewById(rootView, id);
      if (bracketsOnClick == null) {
        break missingId;
      }

      id = R.id.clearOnClick;
      TextView clearOnClick = ViewBindings.findChildViewById(rootView, id);
      if (clearOnClick == null) {
        break missingId;
      }

      id = R.id.closeBtn;
      ImageView closeBtn = ViewBindings.findChildViewById(rootView, id);
      if (closeBtn == null) {
        break missingId;
      }

      id = R.id.decimalOnClick;
      TextView decimalOnClick = ViewBindings.findChildViewById(rootView, id);
      if (decimalOnClick == null) {
        break missingId;
      }

      id = R.id.divisionOnClick;
      TextView divisionOnClick = ViewBindings.findChildViewById(rootView, id);
      if (divisionOnClick == null) {
        break missingId;
      }

      id = R.id.eightOnClick;
      TextView eightOnClick = ViewBindings.findChildViewById(rootView, id);
      if (eightOnClick == null) {
        break missingId;
      }

      id = R.id.equalsOnClick;
      TextView equalsOnClick = ViewBindings.findChildViewById(rootView, id);
      if (equalsOnClick == null) {
        break missingId;
      }

      id = R.id.fiveOnClick;
      TextView fiveOnClick = ViewBindings.findChildViewById(rootView, id);
      if (fiveOnClick == null) {
        break missingId;
      }

      id = R.id.fourOnClick;
      TextView fourOnClick = ViewBindings.findChildViewById(rootView, id);
      if (fourOnClick == null) {
        break missingId;
      }

      id = R.id.minusOnClick;
      TextView minusOnClick = ViewBindings.findChildViewById(rootView, id);
      if (minusOnClick == null) {
        break missingId;
      }

      id = R.id.nineOnClick;
      TextView nineOnClick = ViewBindings.findChildViewById(rootView, id);
      if (nineOnClick == null) {
        break missingId;
      }

      id = R.id.oneOnClick;
      TextView oneOnClick = ViewBindings.findChildViewById(rootView, id);
      if (oneOnClick == null) {
        break missingId;
      }

      id = R.id.plusOnClick;
      TextView plusOnClick = ViewBindings.findChildViewById(rootView, id);
      if (plusOnClick == null) {
        break missingId;
      }

      id = R.id.powerOfOnClick;
      TextView powerOfOnClick = ViewBindings.findChildViewById(rootView, id);
      if (powerOfOnClick == null) {
        break missingId;
      }

      id = R.id.resultTextView;
      TextView resultTextView = ViewBindings.findChildViewById(rootView, id);
      if (resultTextView == null) {
        break missingId;
      }

      id = R.id.sevenOnClick;
      TextView sevenOnClick = ViewBindings.findChildViewById(rootView, id);
      if (sevenOnClick == null) {
        break missingId;
      }

      id = R.id.sixOnClick;
      TextView sixOnClick = ViewBindings.findChildViewById(rootView, id);
      if (sixOnClick == null) {
        break missingId;
      }

      id = R.id.threeOnClick;
      TextView threeOnClick = ViewBindings.findChildViewById(rootView, id);
      if (threeOnClick == null) {
        break missingId;
      }

      id = R.id.timesOnClick;
      TextView timesOnClick = ViewBindings.findChildViewById(rootView, id);
      if (timesOnClick == null) {
        break missingId;
      }

      id = R.id.twoOnClick;
      TextView twoOnClick = ViewBindings.findChildViewById(rootView, id);
      if (twoOnClick == null) {
        break missingId;
      }

      id = R.id.workingsTextView;
      TextView workingsTextView = ViewBindings.findChildViewById(rootView, id);
      if (workingsTextView == null) {
        break missingId;
      }

      id = R.id.zeroOnClick;
      TextView zeroOnClick = ViewBindings.findChildViewById(rootView, id);
      if (zeroOnClick == null) {
        break missingId;
      }

      return new DialogCalculatorBinding((CardView) rootView, bracketsOnClick, clearOnClick,
          closeBtn, decimalOnClick, divisionOnClick, eightOnClick, equalsOnClick, fiveOnClick,
          fourOnClick, minusOnClick, nineOnClick, oneOnClick, plusOnClick, powerOfOnClick,
          resultTextView, sevenOnClick, sixOnClick, threeOnClick, timesOnClick, twoOnClick,
          workingsTextView, zeroOnClick);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
