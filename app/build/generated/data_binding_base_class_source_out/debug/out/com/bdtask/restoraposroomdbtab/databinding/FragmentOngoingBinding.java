// Generated by view binder compiler. Do not edit!
package com.bdtask.restoraposroomdbtab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bdtask.restoraposroomdbtab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOngoingBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout appbar;

  @NonNull
  public final TextView cancelBtn;

  @NonNull
  public final TextView completeBtn;

  @NonNull
  public final TextView dueposBtn;

  @NonNull
  public final TextView editBtn;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final LinearLayout layoutNoOrder;

  @NonNull
  public final TextView mergeBtn;

  @NonNull
  public final ImageView ongBack;

  @NonNull
  public final TextView ongHeader;

  @NonNull
  public final RecyclerView ongRecycler;

  @NonNull
  public final EditText ongSearchEt;

  @NonNull
  public final HorizontalScrollView scrollView;

  @NonNull
  public final ImageView searchBtn;

  @NonNull
  public final EditText searchEt;

  @NonNull
  public final TextView splitBtn;

  @NonNull
  public final ImageView tickBtn;

  @NonNull
  public final TextView tokenBtn;

  private FragmentOngoingBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout appbar,
      @NonNull TextView cancelBtn, @NonNull TextView completeBtn, @NonNull TextView dueposBtn,
      @NonNull TextView editBtn, @NonNull LinearLayout layout, @NonNull LinearLayout layoutNoOrder,
      @NonNull TextView mergeBtn, @NonNull ImageView ongBack, @NonNull TextView ongHeader,
      @NonNull RecyclerView ongRecycler, @NonNull EditText ongSearchEt,
      @NonNull HorizontalScrollView scrollView, @NonNull ImageView searchBtn,
      @NonNull EditText searchEt, @NonNull TextView splitBtn, @NonNull ImageView tickBtn,
      @NonNull TextView tokenBtn) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.cancelBtn = cancelBtn;
    this.completeBtn = completeBtn;
    this.dueposBtn = dueposBtn;
    this.editBtn = editBtn;
    this.layout = layout;
    this.layoutNoOrder = layoutNoOrder;
    this.mergeBtn = mergeBtn;
    this.ongBack = ongBack;
    this.ongHeader = ongHeader;
    this.ongRecycler = ongRecycler;
    this.ongSearchEt = ongSearchEt;
    this.scrollView = scrollView;
    this.searchBtn = searchBtn;
    this.searchEt = searchEt;
    this.splitBtn = splitBtn;
    this.tickBtn = tickBtn;
    this.tokenBtn = tokenBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOngoingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOngoingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ongoing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOngoingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      RelativeLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.cancelBtn;
      TextView cancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelBtn == null) {
        break missingId;
      }

      id = R.id.completeBtn;
      TextView completeBtn = ViewBindings.findChildViewById(rootView, id);
      if (completeBtn == null) {
        break missingId;
      }

      id = R.id.dueposBtn;
      TextView dueposBtn = ViewBindings.findChildViewById(rootView, id);
      if (dueposBtn == null) {
        break missingId;
      }

      id = R.id.editBtn;
      TextView editBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBtn == null) {
        break missingId;
      }

      id = R.id.layout;
      LinearLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.layoutNoOrder;
      LinearLayout layoutNoOrder = ViewBindings.findChildViewById(rootView, id);
      if (layoutNoOrder == null) {
        break missingId;
      }

      id = R.id.mergeBtn;
      TextView mergeBtn = ViewBindings.findChildViewById(rootView, id);
      if (mergeBtn == null) {
        break missingId;
      }

      id = R.id.ongBack;
      ImageView ongBack = ViewBindings.findChildViewById(rootView, id);
      if (ongBack == null) {
        break missingId;
      }

      id = R.id.ongHeader;
      TextView ongHeader = ViewBindings.findChildViewById(rootView, id);
      if (ongHeader == null) {
        break missingId;
      }

      id = R.id.ong_recycler;
      RecyclerView ongRecycler = ViewBindings.findChildViewById(rootView, id);
      if (ongRecycler == null) {
        break missingId;
      }

      id = R.id.ongSearchEt;
      EditText ongSearchEt = ViewBindings.findChildViewById(rootView, id);
      if (ongSearchEt == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      HorizontalScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.searchBtn;
      ImageView searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.searchEt;
      EditText searchEt = ViewBindings.findChildViewById(rootView, id);
      if (searchEt == null) {
        break missingId;
      }

      id = R.id.splitBtn;
      TextView splitBtn = ViewBindings.findChildViewById(rootView, id);
      if (splitBtn == null) {
        break missingId;
      }

      id = R.id.tick_btn;
      ImageView tickBtn = ViewBindings.findChildViewById(rootView, id);
      if (tickBtn == null) {
        break missingId;
      }

      id = R.id.tokenBtn;
      TextView tokenBtn = ViewBindings.findChildViewById(rootView, id);
      if (tokenBtn == null) {
        break missingId;
      }

      return new FragmentOngoingBinding((RelativeLayout) rootView, appbar, cancelBtn, completeBtn,
          dueposBtn, editBtn, layout, layoutNoOrder, mergeBtn, ongBack, ongHeader, ongRecycler,
          ongSearchEt, scrollView, searchBtn, searchEt, splitBtn, tickBtn, tokenBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
