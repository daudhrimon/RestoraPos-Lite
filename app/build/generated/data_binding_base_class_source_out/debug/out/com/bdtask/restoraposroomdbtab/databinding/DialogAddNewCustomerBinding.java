// Generated by view binder compiler. Do not edit!
package com.bdtask.restoraposroomdbtab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bdtask.restoraposroomdbtab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddNewCustomerBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout addCview;

  @NonNull
  public final TextView addressHeader;

  @NonNull
  public final TextView closeBtn;

  @NonNull
  public final ImageView crossBtn;

  @NonNull
  public final EditText cusAddEt;

  @NonNull
  public final EditText cusEmailEt;

  @NonNull
  public final EditText cusFavAddEt;

  @NonNull
  public final EditText cusMobileEt;

  @NonNull
  public final EditText cusNameEt;

  @NonNull
  public final TextView emailHeader;

  @NonNull
  public final TextView favAddHeader;

  @NonNull
  public final TextView mobileHeader;

  @NonNull
  public final TextView nameHeader;

  @NonNull
  public final TextView submitBtn;

  private DialogAddNewCustomerBinding(@NonNull CardView rootView, @NonNull LinearLayout addCview,
      @NonNull TextView addressHeader, @NonNull TextView closeBtn, @NonNull ImageView crossBtn,
      @NonNull EditText cusAddEt, @NonNull EditText cusEmailEt, @NonNull EditText cusFavAddEt,
      @NonNull EditText cusMobileEt, @NonNull EditText cusNameEt, @NonNull TextView emailHeader,
      @NonNull TextView favAddHeader, @NonNull TextView mobileHeader, @NonNull TextView nameHeader,
      @NonNull TextView submitBtn) {
    this.rootView = rootView;
    this.addCview = addCview;
    this.addressHeader = addressHeader;
    this.closeBtn = closeBtn;
    this.crossBtn = crossBtn;
    this.cusAddEt = cusAddEt;
    this.cusEmailEt = cusEmailEt;
    this.cusFavAddEt = cusFavAddEt;
    this.cusMobileEt = cusMobileEt;
    this.cusNameEt = cusNameEt;
    this.emailHeader = emailHeader;
    this.favAddHeader = favAddHeader;
    this.mobileHeader = mobileHeader;
    this.nameHeader = nameHeader;
    this.submitBtn = submitBtn;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddNewCustomerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddNewCustomerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_new_customer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddNewCustomerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addCview;
      LinearLayout addCview = ViewBindings.findChildViewById(rootView, id);
      if (addCview == null) {
        break missingId;
      }

      id = R.id.addressHeader;
      TextView addressHeader = ViewBindings.findChildViewById(rootView, id);
      if (addressHeader == null) {
        break missingId;
      }

      id = R.id.closeBtn;
      TextView closeBtn = ViewBindings.findChildViewById(rootView, id);
      if (closeBtn == null) {
        break missingId;
      }

      id = R.id.crossBtn;
      ImageView crossBtn = ViewBindings.findChildViewById(rootView, id);
      if (crossBtn == null) {
        break missingId;
      }

      id = R.id.cusAddEt;
      EditText cusAddEt = ViewBindings.findChildViewById(rootView, id);
      if (cusAddEt == null) {
        break missingId;
      }

      id = R.id.cusEmailEt;
      EditText cusEmailEt = ViewBindings.findChildViewById(rootView, id);
      if (cusEmailEt == null) {
        break missingId;
      }

      id = R.id.cusFavAddEt;
      EditText cusFavAddEt = ViewBindings.findChildViewById(rootView, id);
      if (cusFavAddEt == null) {
        break missingId;
      }

      id = R.id.cusMobileEt;
      EditText cusMobileEt = ViewBindings.findChildViewById(rootView, id);
      if (cusMobileEt == null) {
        break missingId;
      }

      id = R.id.cusNameEt;
      EditText cusNameEt = ViewBindings.findChildViewById(rootView, id);
      if (cusNameEt == null) {
        break missingId;
      }

      id = R.id.emailHeader;
      TextView emailHeader = ViewBindings.findChildViewById(rootView, id);
      if (emailHeader == null) {
        break missingId;
      }

      id = R.id.favAddHeader;
      TextView favAddHeader = ViewBindings.findChildViewById(rootView, id);
      if (favAddHeader == null) {
        break missingId;
      }

      id = R.id.mobileHeader;
      TextView mobileHeader = ViewBindings.findChildViewById(rootView, id);
      if (mobileHeader == null) {
        break missingId;
      }

      id = R.id.nameHeader;
      TextView nameHeader = ViewBindings.findChildViewById(rootView, id);
      if (nameHeader == null) {
        break missingId;
      }

      id = R.id.submitBtn;
      TextView submitBtn = ViewBindings.findChildViewById(rootView, id);
      if (submitBtn == null) {
        break missingId;
      }

      return new DialogAddNewCustomerBinding((CardView) rootView, addCview, addressHeader, closeBtn,
          crossBtn, cusAddEt, cusEmailEt, cusFavAddEt, cusMobileEt, cusNameEt, emailHeader,
          favAddHeader, mobileHeader, nameHeader, submitBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
